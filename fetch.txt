Конечно, давайте разберем fetch и .then простым языком, как для "чайников".
Что такое fetch?
Представьте, что у вас есть почтальон (это fetch), и вы хотите отправить ему письмо (это запрос) к другому человеку, который живет в другом доме (это сервер, например, OMDB API).
 * Вы пишете письмо (создаете запрос):
   * Вы указываете адрес (URL API), пишете, что хотите узнать (параметры запроса, например, название фильма), и кладете письмо в конверт (формируете запрос).
 * Почтальон отправляется в путь (fetch(url)):
   * Функция fetch берет ваш запрос и отправляет его на указанный адрес.
 * Ожидание ответа:
   * Почтальон ушел, и вы ждете, пока он вернется с ответом. Это может занять какое-то время, потому что ему нужно дойти до другого дома и получить ответ.
Что такое .then?
Теперь представьте, что у вас есть помощник, который ждет, пока почтальон вернется. Этот помощник (это .then) будет обрабатывать ответ, когда он придет.
 * Почтальон возвращается с ответом (response):
   * Когда fetch получает ответ от сервера, он передает его вашему помощнику .then.
   * Ответ (response) — это как письмо от другого человека, в котором содержится информация, которую вы запрашивали.
 * Помощник читает письмо (response.json()):
   * Первый .then берет ответ (response) и преобразует его в понятный для вас формат (JSON). Это как если бы ваш помощник переводил письмо с иностранного языка на ваш родной.
 * Помощник передает вам результат (data):
   * Второй .then получает уже переведенный ответ (data) и передает его вам.
   * data — это объект JavaScript, в котором содержатся данные, полученные от сервера (например, информация о фильме).
 * Вы обрабатываете результат:
   * Теперь вы можете использовать данные из data, чтобы отобразить информацию на странице или сделать что-то еще.
Простыми словами:
 * fetch — это функция, которая отправляет запросы к серверу.
 * .then — это функция, которая обрабатывает ответы от сервера.
 * Первый .then преобразует ответ в формат JSON.
 * Второй .then получает преобразованный ответ и передает его вам.
Пример:
fetch("http://example.com/data") // Отправляем запрос
  .then(response => response.json()) // Преобразуем ответ в JSON
  .then(data => {
    // Обрабатываем данные
    console.log(data);
  });

В этом примере:
 * fetch("http://example.com/data") отправляет запрос к серверу.
 * .then(response => response.json()) преобразует ответ в JSON.
 * .then(data => console.log(data)) выводит данные в консоль.
Надеюсь, это объяснение помогло вам понять, как работают fetch и .then.
